Recording Metadata
==================

Usage Example
-------------

Metadata is bundled with the data generated by a scan. It can be used by
callbacks (e.g., to tell plots how to label their axes) or simply used to
identify and analyze the data later.

.. ipython:: python
    :suppress:

    from bluesky.standard_config import gs, ct
    from bluesky.examples import det
    from bluesky.plans import Count
    RE = gs.RE
    RE.md['beamline_id'] = 'demo'
    RE.md['owner'] = 'demo'
    RE.md['group'] = 'demo'

.. ipython:: python

    RE.md['project'] = 'my xray project'
    RE.md['sample'] = {'color': 'red', 'dimensions': [10, 20, 5]}

Or specified when the scan is run.

.. ipython:: python

    plan = Count([det])
    RE(plan, experimenter='Emily', mood='excited')

.. note::

    To improve searchability, the key "sample" has specicial significance.
    It must be either a string

    .. code-block:: python

        'red 10 20 5'

    or a dictionary

    .. code-block:: python

        {'color': 'red', 'dimensions': [10, 20, 5]}

    A dictionary is preferred because it is self-describing and more richly
    searchable, but either is allowed.

    Only "sample" has this restriciton. Invent custom-named keys (as in the
    tongue-in-cheek "mood" example above) as needed. These can contain
    strings, dictionaries, lists, and numbers.

Required Fields
---------------

Some fields and required by our Document specification, and the RunEngine will
raise a ``KeyError`` if they are not set. These fields are:

* owner
* group
* beamline_id (e.g., 'csx')

``standard_config.py`` fills some of these in automatically (e.g., 'owner'
defaults to the username of the UNIX user currently logged in).

Persistence Between Runs
------------------------

These fields are automatically reused between runs unless overridden.

* owner
* group
* beamline_id
* scan_id (which is automatically incremented)

Custom fields, like 'experimenter' and 'mood' in the example above, are not
reused by default, as we can see below.

.. ipython:: python

    RE(plan, sample={'color': 'blue', 'dimensions': [3, 1, 4]})

To make a custom field persist between sessions, add it to ``RE.md``.

.. ipython:: python

    RE.md['color'] = 'blue'

Now it will be included in the metadata of every scan until it is deleted:

.. ipython:: python

    del RE.md['color']

To review the metadata before running ascan, check ``RE.md``, which
behaves like a Python dictionary.

.. ipython:: python

    RE.md['sample']

To start fresh:

.. ipython:: python

    RE.md.clear()

Metadata Validator
------------------

Additional, customized metadata validation can be added to the RunEngine.
For example, to ensure that a run will not be executed unless the parameter
'sample_number' is specified, define a function that accepts a dictionary
argument and raises if 'sample_number' is not found.

.. code-block:: python

    def ensure_sample_number(md):
        if 'sample_number' not in md:
            raise ValueError("You forgot the sample number.")

Apply this function by setting ``RE.md_validator = ensure_sample_number``.
The function will be executed immediately before each new run in opened.
